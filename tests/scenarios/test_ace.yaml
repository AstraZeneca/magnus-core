dag:
  # args: (str) tag_key (from cli)
  description: Run a collection of checks (a tag)
  start_at: get-checks-keys-in-tag
  max_time: 86400 # in seconds for the entire dag
  steps:
    sync-configs:
      type: task
      next: get-checks-keys-in-tag
      command: tests.scenarios.only_for_testing.ace_sync_configs
      catalog:
        put:
          - "*"
    get-checks-keys-in-tag:
      # ARG: tag_key
      type: task
      next: run-checks
      command: tests.scenarios.only_for_testing.ace
      # RETURNS: list of check keys
    success:
      type: success
    failure:
      type: fail
    run-checks:
      type: map
      iterate_on: check_keys
      iterate_as: check_key
      next: success
      branch:
        start_at: get-check-configs
        steps:
          get-check-configs:
            # ARGS:
            # RETURNS: [source_names], check_config
            type: task
            command: tests.scenarios.only_for_testing.ace_get_source
            next: get-sources
          get-sources:
            # ARGS: source, compare
            # PUTS: <source>.pkl, <compare>.pkl
            type: map
            iterate_on: sources
            iterate_as: source
            next: compare
            branch:
              start_at: get-source
              steps:
                get-source:
                  type: as-is
                  next: success
                success:
                  type: success
                failure:
                  type: fail
          compare:
            # ARGS: check_key,
            # GETS: <source>.pkl, <compare>.pkl, check_config
            # PUTS: <check>.pkl
            type: as-is
            next: output-check
          output-check:
            # ARGS: check_name, check_config
            # GETS: <check>.pkl
            type: as-is
            next: success
          success:
            type: success
          failure:
            type: fail
